package Hotel_Management_System;


//import <any?>;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
public class Hotel_Management_SystemForm extends javax.swing.JFrame {

    /**
     * Creates new form hotel
     */
    public Hotel_Management_SystemForm() {
        initComponents();
        this.setLocationRelativeTo(null); // to center he form on the screen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jButton1.setText("Manager");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jButton2.setText("Recieptionist");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel1.setText("Hotel Management System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(266, 266, 266)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ManagerLoginForm log = new ManagerLoginForm ();
     log.setVisible(true);
     log.pack(); //The pack method sizes the frame so that all its contents are at or above their preferred sizes.
     // An alternative to pack is to establish a frame size explicitly by calling setSize or setBounds
     log.setLocationRelativeTo(null);
     log.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
     this.dispose(); // to prevent appearing of all frames at same time (disappear the previouse form)
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       RecieptionistForm r = new   RecieptionistForm ();
       r.setVisible(true);
       r.pack();
       r.setLocationRelativeTo(null);
       r.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hotel_Management_SystemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hotel_Management_SystemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hotel_Management_SystemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hotel_Management_SystemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hotel_Management_SystemForm().setVisible(true);
            }
        });
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
public class Employee 
{
    int ID ;
  String Name ;
  Double Salary ;
  String JobTitle ;
  Employee ( int i , String n , Double s , String j )
  {
      i= ID ;
     n=Name ;
     s=Salary ;
     j=JobTitle ;
  }
}
public class Resident 
{
    int ID ;
    String Name ;
    int DurationDays ;
    String RoomInfo;
    String ServiceType;
    double AccommodationCOST;
    Resident (int ID , String Name , int DurationDays , String ServiceType, String RoomInfo )
    {
       this.ID=ID;
      this.Name=Name;
      this.DurationDays=DurationDays;
      this.ServiceType=ServiceType;
      this.RoomInfo=RoomInfo;
    }
    double CalcAccomodatioCost ( String RoomInfo , int DurationDays, String ServiceType )
    {
        double RoomCost=0.0;
        double ServiceCost=0.0;
        if (RoomInfo.equals("single"))
        {
             RoomCost = 1000;
        }
        else if (RoomInfo.equals("double"))
        {
         RoomCost = 2000;
        }
        else if (RoomInfo.equals("trible"))
        {
            RoomCost=3000;
        }
        else if (RoomInfo.equals("familyroom"))
        {
            RoomCost=3500;
        }
        else if (RoomInfo.equals("sweat"))
        {
            RoomCost=4000;
        }
        if (ServiceType.equals("allinclusive"))
        {
            ServiceCost =1500;
        }
        else if (ServiceType.equals("halfboard"))
        {
            ServiceCost=1000;
        }
        else if (ServiceType.equals("breakfastonly"))
        {
            ServiceCost=600;
        }
        if (ServiceType.equals("Harddrink"))
        {
            ServiceCost+=300;
        }
        double Cost = RoomCost*DurationDays+ServiceCost;
                return Cost ;
    }
}
 static public class Room extends Resident
{
     boolean [] RoomNum  = new boolean [35] ;
     int Num ;
     double RoomCost;
    //String RoomType ;
  Room ( int ID , String Name , int DurationDays , String ServiceType,String RoomInfo, int Num)
  {
      super( ID ,  Name ,  DurationDays , ServiceType, RoomInfo);
      this.Num=Num;
     // RoomNum = new int [350] ;
  }
    void GetRoomNum (int num)
  {
      boolean IsAvailble;
      num = Num ;
       for (int i = 0 ; i < RoomNum.length ; i++ )
      {
           RoomNum[i]=false;    
           if (RoomNum.length==0)
               IsAvailble = false;
      }
             IsAvailble = true ;
            for (int x = 0; x <RoomNum.length; x++)
            {
                 RoomNum[x]=false;
            }
             //for (int x = 0; x < RoomNum.length; x++)
           //  {
          //  if (RoomNum[x].getName.equals("nobody"))
            //{
               // System.out.println("room " + (x + 1) + " is empty");
           // }
             //}
      //   if ()
       
  }
    double  RoomPrice( String  ri )
    {   
        ri=RoomInfo;
      if ( ri== "Single")
      {
          RoomCost = 1000; 
      }
      else if (ri=="Double")
      {
       RoomCost=2000;
      }
      else if (ri=="Triple")
      {
      RoomCost = 2500;
      }
      return RoomCost;
    }
}
 public class Manager extends Employee
 {
     
 Manager ( int ID, String Name , Double Salary , String JobTitle)
 {
  super(ID,Name,Salary,JobTitle);
 }
 }
 public class Recieptionist extends Employee
 {
     Recieptionist ( int ID , String Name , Double Salary , String JobTitle)
     {
      super(ID,Name,Salary,JobTitle);
     }
 }
 public class RoomService extends Employee
 {
 RoomService (int ID , String Name , Double Salary, String JobTitle)
 {
 super(ID,Name,Salary,JobTitle);
 }
 }
}